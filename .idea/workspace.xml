<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1da9b183-2b2d-4295-a26d-8987e8e0b8f3" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/ua/project/dao/assortmentDAO/AssortmentDaoImp.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ua/project/dao/assortmentDAO/AssortmentDaoImp.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/ua/project/dao/assortmentDAO/AssortmentDaoImpTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/ua/project/dao/assortmentDAO/AssortmentDaoImpTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/ua/project/dao/assortment_typeDAO/AssortmentTypeDaoImpTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/ua/project/dao/assortment_typeDAO/AssortmentTypeDaoImpTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2dffncw39BBwZbMu9zgGjEfswph" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="false" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.App.executor": "Run",
    "Docker.docker-compose.yml.test-cafe-postgres: Compose Deployment.executor": "Run",
    "JUnit.AssortmentDaoImpTest.changePriceByTypeAndTitle_ShouldUpdatePriceByTypeAndTitleOfAssortment_WhenCalled.executor": "Run",
    "JUnit.AssortmentDaoImpTest.deleteAssortmentByTypeAndTitle_ShouldDeleteAssortmentByTypeAndTitleOfAssortment_WhenCalled.executor": "Run",
    "JUnit.AssortmentDaoImpTest.executor": "Run",
    "JUnit.AssortmentDaoImpTest.getAssortmentByType_ShouldReturnAssortmentList_WhenTypeIsInTheTable.executor": "Run",
    "JUnit.AssortmentDaoImpTest.update_ShouldUpdateAssortmentIntoTable_WhenCalled.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.getAssortmentTypeByTitle_ShouldReturnAssortmentType_WhenRequiredTitleInTheTable.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.getAssortmentTypeByTitle_ShouldReturnAssortmentType_WhenRequiredTitleIsInTheTable.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.getAssortmentTypeByTitle_ShouldReturnEmptyAssortmentType_WhenRequiredTitleIsNotInTheTable.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.isAssortmentTypeAvailable_ShouldReturnFalse_WhenAssortmentTypeIsNotInTheTable.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.isAssortmentTypeAvailable_ShouldReturnTrue_WhenAssortmentTypeIsInTable.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.saveMany_ShouldInsertListOfAssortmentTypeIntoTable_WhenCalled.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.save_ShouldInsertAssortmentTypeIntoTable_WhenCalled.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.save_ShouldThrow_WhenNoTablesInDB.executor": "Run",
    "JUnit.AssortmentTypeDaoImpTest.update_ShouldUpdateAssortmentTypeTable_WhenCalled.executor": "Run",
    "Maven.Practice_120324 [clean].executor": "Run",
    "Maven.Practice_120324 [compile].executor": "Run",
    "Maven.Practice_120324 [install].executor": "Run",
    "Maven.Practice_120324 [org.jacoco:jacoco-maven-plugin:0.8.10:check].executor": "Run",
    "Maven.Practice_120324 [org.jacoco:jacoco-maven-plugin:0.8.10:help].executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "G:/Browser Downloads/withUnitTests",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql"
    ]
  }
}]]></component>
  <component name="RunManager" selected="JUnit.AssortmentDaoImpTest">
    <configuration name="AssortmentDaoImpTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Practice_120324" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ua.project.dao.assortmentDAO.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ua.project.dao.assortmentDAO" />
      <option name="MAIN_CLASS_NAME" value="com.ua.project.dao.assortmentDAO.AssortmentDaoImpTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AssortmentDaoImpTest.changePriceByTypeAndTitle_ShouldUpdatePriceByTypeAndTitleOfAssortment_WhenCalled" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Practice_120324" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ua.project.dao.assortmentDAO.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ua.project.dao.assortmentDAO" />
      <option name="MAIN_CLASS_NAME" value="com.ua.project.dao.assortmentDAO.AssortmentDaoImpTest" />
      <option name="METHOD_NAME" value="changePriceByTypeAndTitle_ShouldUpdatePriceByTypeAndTitleOfAssortment_WhenCalled" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AssortmentDaoImpTest.deleteAssortmentByTypeAndTitle_ShouldDeleteAssortmentByTypeAndTitleOfAssortment_WhenCalled" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Practice_120324" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ua.project.dao.assortmentDAO.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ua.project.dao.assortmentDAO" />
      <option name="MAIN_CLASS_NAME" value="com.ua.project.dao.assortmentDAO.AssortmentDaoImpTest" />
      <option name="METHOD_NAME" value="deleteAssortmentByTypeAndTitle_ShouldDeleteAssortmentByTypeAndTitleOfAssortment_WhenCalled" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AssortmentDaoImpTest.getAssortmentByType_ShouldReturnAssortmentList_WhenTypeIsInTheTable" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Practice_120324" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ua.project.dao.assortmentDAO.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ua.project.dao.assortmentDAO" />
      <option name="MAIN_CLASS_NAME" value="com.ua.project.dao.assortmentDAO.AssortmentDaoImpTest" />
      <option name="METHOD_NAME" value="getAssortmentByType_ShouldReturnAssortmentList_WhenTypeIsInTheTable" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AssortmentDaoImpTest.update_ShouldUpdateAssortmentIntoTable_WhenCalled" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="Practice_120324" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ua.project.dao.assortmentDAO.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ua.project.dao.assortmentDAO" />
      <option name="MAIN_CLASS_NAME" value="com.ua.project.dao.assortmentDAO.AssortmentDaoImpTest" />
      <option name="METHOD_NAME" value="update_ShouldUpdateAssortmentIntoTable_WhenCalled" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.AssortmentDaoImpTest" />
        <item itemvalue="JUnit.AssortmentDaoImpTest.getAssortmentByType_ShouldReturnAssortmentList_WhenTypeIsInTheTable" />
        <item itemvalue="JUnit.AssortmentDaoImpTest.deleteAssortmentByTypeAndTitle_ShouldDeleteAssortmentByTypeAndTitleOfAssortment_WhenCalled" />
        <item itemvalue="JUnit.AssortmentDaoImpTest.update_ShouldUpdateAssortmentIntoTable_WhenCalled" />
        <item itemvalue="JUnit.AssortmentDaoImpTest.changePriceByTypeAndTitle_ShouldUpdatePriceByTypeAndTitleOfAssortment_WhenCalled" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1da9b183-2b2d-4295-a26d-8987e8e0b8f3" name="Changes" comment="" />
      <created>1710404222724</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1710404222724</updated>
      <workItem from="1710404223800" duration="17536000" />
      <workItem from="1710489886394" duration="3387000" />
      <workItem from="1710749817459" duration="16791000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="com.ua.project.exception.ConnectionDBException" package="com.ua.project.exception" />
          <option name="timeStamp" value="1" />
        </breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/main/java/com/ua/project/dao/ConnectionFactory.java</url>
          <line>31</line>
          <properties class="com.ua.project.dao.ConnectionFactory" method="makeConnection">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>